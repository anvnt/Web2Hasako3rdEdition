@model UELWeb2Hasako.Models.HAISANKHO

@{
    ViewBag.Title = "SuaHSK";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <div class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1 class="m-0 text-dark">Điều chỉnh thông tin sản phẩm </h1>
                    </div><!-- /.col -->
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                        </ol>
                    </div><!-- /.col -->
                </div><!-- /.row -->
            </div><!-- /.container-fluid -->
        </div>
        <!-- /.content-header -->
        <!-- Main content -->
        <section class="content">
            <div class="container-fluid">
                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.MaHS)
                    @*<div class="form-group">
                        @Html.LabelFor(model=> model.MaHS, new  { @class="control-label col-md-2"})
                        <div class="col-md-10">
                            <div style="font:18px;padding:  5px 0 0 5px">
                                @Model.MaHS
                        </div>
                    </div>*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.TenHS, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TenHS, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TenHS, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Dongia, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Dongia, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Dongia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mota, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <textarea name="Mota">@Model.Mota</textarea>
                            <script>
                                tinymce.init({
                                    selector: 'textarea',
                                    plugins: 'advlist autolink lists link image charmap print preview hr anchor pagebreak',
                                    toolbar_mode: 'floating',
                                });
                            </script>
                            @*@Html.EditorFor(model => model.Mota, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Mota, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Anhbia, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            Chọn ảnh mới
                            <input type="file" name="fileUPload" />
                            <img src="@Url.Content("~/images/"+Model.Anhbia)" width="120px" /> (Ảnh hiện tại)
                            @ViewBag.Thongbao
                            @*@Html.EditorFor(model => model.Anhbia, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Anhbia, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Ngaycapnhat, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Ngaycapnhat, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Ngaycapnhat, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Donvi, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Donvi, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Donvi, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Soluongton, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Soluongton, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Soluongton, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MaDM, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("MaDM")
                            @*@Html.EditorFor(model => model.MaDM, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MaDM, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MaNH, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MaNH, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MaNH, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div><!-- /.container-fluid -->
        </section>
        <!-- /.content -->
    </div>
    <!-- /.content-wrapper -->
}
